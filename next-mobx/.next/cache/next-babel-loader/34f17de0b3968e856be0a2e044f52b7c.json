{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { makeAutoObservable } from 'mobx';\n\nvar SampleStore = /*#__PURE__*/function () {\n  function SampleStore() {\n    _classCallCheck(this, SampleStore);\n\n    _defineProperty(this, \"counter\", 0);\n\n    _defineProperty(this, \"startTime\", new Date());\n\n    makeAutoObservable(this);\n  }\n\n  _createClass(SampleStore, [{\n    key: \"elapsedTime\",\n    get: function get() {\n      return new Date() - this.startTime + ' milliseconds';\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      this.counter++;\n      return this.counter;\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      this.counter--;\n      return this.counter;\n    }\n  }]);\n\n  return SampleStore;\n}();\n\nexport default SampleStore; // export function createSampleStore() {\n//   return {\n//     counter: 0,\n//     increment() {\n//       this.counter++;\n//       return this.counter;\n//     },\n//     decrement() {\n//       this.counter++;\n//       return this.counter;\n//     },\n//     elapsedTime() {\n//       return this.current - this.start + 'milliseconds';\n//     },\n//   };\n// }","map":{"version":3,"sources":["/Users/yonatanmk/projects/next/next-mobx/stores/SampleStore/index.js"],"names":["makeAutoObservable","SampleStore","Date","startTime","counter"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,MAAnC;;IAEMC,W;AAIJ,yBAAc;AAAA;;AAAA,qCAHJ,CAGI;;AAAA,uCAFF,IAAIC,IAAJ,EAEE;;AACZF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;;;SAED,eAAkB;AAChB,aAAO,IAAIE,IAAJ,KAAa,KAAKC,SAAlB,GAA8B,eAArC;AACD;;;WAED,qBAAY;AACV,WAAKC,OAAL;AACA,aAAO,KAAKA,OAAZ;AACD;;;WAED,qBAAY;AACV,WAAKA,OAAL;AACA,aAAO,KAAKA,OAAZ;AACD;;;;;;AAGH,eAAeH,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { makeAutoObservable } from 'mobx';\n\nclass SampleStore {\n  counter = 0;\n  startTime = new Date();\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get elapsedTime() {\n    return new Date() - this.startTime + ' milliseconds';\n  }\n\n  increment() {\n    this.counter++;\n    return this.counter;\n  }\n\n  decrement() {\n    this.counter--;\n    return this.counter;\n  }\n}\n\nexport default SampleStore;\n\n// export function createSampleStore() {\n//   return {\n//     counter: 0,\n//     increment() {\n//       this.counter++;\n//       return this.counter;\n//     },\n//     decrement() {\n//       this.counter++;\n//       return this.counter;\n//     },\n//     elapsedTime() {\n//       return this.current - this.start + 'milliseconds';\n//     },\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}