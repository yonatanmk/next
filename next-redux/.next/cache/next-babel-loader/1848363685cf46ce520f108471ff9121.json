{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanmk/projects/next/next-redux/src/features/counter/Counter.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, incrementIfOdd, selectCount } from './counterSlice';\nimport styles from './Counter.module.css';\nexport function Counter() {\n  _s();\n\n  var count = useSelector(selectCount);\n  var dispatch = useDispatch();\n\n  var _useState = useState('2'),\n      incrementAmount = _useState[0],\n      setIncrementAmount = _useState[1];\n\n  var incrementValue = Number(incrementAmount) || 0;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: styles.button,\n    \"aria-label\": \"Decrement value\",\n    onClick: function onClick() {\n      return dispatch(decrement());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"-\"), __jsx(\"span\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, count), __jsx(\"button\", {\n    className: styles.button,\n    \"aria-label\": \"Increment value\",\n    onClick: function onClick() {\n      return dispatch(increment());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"+\")), __jsx(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    className: styles.textbox,\n    \"aria-label\": \"Set increment amount\",\n    value: incrementAmount,\n    onChange: function onChange(e) {\n      return setIncrementAmount(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    className: styles.button,\n    onClick: function onClick() {\n      return dispatch(incrementByAmount(incrementValue));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Add Amount\"), __jsx(\"button\", {\n    className: styles.asyncButton,\n    onClick: function onClick() {\n      return dispatch(incrementAsync(incrementValue));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Add Async\"), __jsx(\"button\", {\n    className: styles.button,\n    onClick: function onClick() {\n      return dispatch(incrementIfOdd(incrementValue));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Add If Odd\")));\n}\n\n_s(Counter, \"n8Hn+dfjiOyoP6EA1ZJKfEKeUOY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/yonatanmk/projects/next/next-redux/src/features/counter/Counter.js"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","incrementIfOdd","selectCount","styles","Counter","count","dispatch","incrementAmount","setIncrementAmount","incrementValue","Number","row","button","value","textbox","e","target","asyncButton"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,WANF,QAOO,gBAPP;AAQA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,MAAMC,KAAK,GAAGV,WAAW,CAACO,WAAD,CAAzB;AACA,MAAMI,QAAQ,GAAGV,WAAW,EAA5B;;AACA,kBAA8CF,QAAQ,CAAC,GAAD,CAAtD;AAAA,MAAOa,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,MAAMC,cAAc,GAAGC,MAAM,CAACH,eAAD,CAAN,IAA2B,CAAlD;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACQ,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAER,MAAM,CAACS,MADpB;AAEE,kBAAW,iBAFb;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMN,QAAQ,CAACT,SAAS,EAAV,CAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAQE;AAAM,IAAA,SAAS,EAAEM,MAAM,CAACU,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCR,KAAhC,CARF,EASE;AACE,IAAA,SAAS,EAAEF,MAAM,CAACS,MADpB;AAEE,kBAAW,iBAFb;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMN,QAAQ,CAACR,SAAS,EAAV,CAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CADF,EAkBE;AAAK,IAAA,SAAS,EAAEK,MAAM,CAACQ,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAER,MAAM,CAACW,OADpB;AAEE,kBAAW,sBAFb;AAGE,IAAA,KAAK,EAAEP,eAHT;AAIE,IAAA,QAAQ,EAAE,kBAACQ,CAAD;AAAA,aAAOP,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV,CAAzB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AACE,IAAA,SAAS,EAAEV,MAAM,CAACS,MADpB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,QAAQ,CAACP,iBAAiB,CAACU,cAAD,CAAlB,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAaE;AACE,IAAA,SAAS,EAAEN,MAAM,CAACc,WADpB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMX,QAAQ,CAACN,cAAc,CAACS,cAAD,CAAf,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,EAmBE;AACE,IAAA,SAAS,EAAEN,MAAM,CAACS,MADpB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,QAAQ,CAACL,cAAc,CAACQ,cAAD,CAAf,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,CAlBF,CADF;AA+CD;;GAtDeL,O;UACAT,W,EACGC,W;;;KAFHQ,O","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}